{"ast":null,"code":"import _slicedToArray from \"/home/cacf/react/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cacf/react/app/src/components/Weather_by_date.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function Weather_by_date() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    Date = _useState2[0],\n    setDate = _useState2[1];\n  var handleonchange = function handleonchange() {\n    setDate(Date);\n  };\n  useEffect(function () {\n    // Fetch weather data from the Flask backend\n    axios.get(\"/weather_by_date\").then(function (response) {\n      setDate(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching weather data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    onChange: handleonchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  })));\n}","map":{"version":3,"names":["React","useEffect","useState","axios","Weather_by_date","_useState","_useState2","_slicedToArray","Date","setDate","handleonchange","get","then","response","data","catch","error","console","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange"],"sources":["/home/cacf/react/app/src/components/Weather_by_date.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\n\nexport default function Weather_by_date() {\n\n    const [Date , setDate] = useState(null)\n    \n    const handleonchange = () =>{\n        setDate(Date);\n    }\n\n    useEffect(() => {\n        // Fetch weather data from the Flask backend\n        axios.get(\"/weather_by_date\")\n          .then(response => {\n            setDate(response.data);\n          })\n          .catch(error => {\n            console.error('Error fetching weather data:', error);\n          });\n      }, []);\n\n  return (\n    <>\n    <div className=\"container\">\n\n    <input type=\"date\" onChange={handleonchange}/>\n\n    </div>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAA,IAAAC,SAAA,GAEbH,QAAQ,CAAC,IAAI,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,IAAI,GAAAF,UAAA;IAAGG,OAAO,GAAAH,UAAA;EAErB,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAQ;IACxBD,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EAEDP,SAAS,CAAC,YAAM;IACZ;IACAE,KAAK,CAACQ,GAAG,CAAC,kBAAkB,CAAC,CAC1BC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChBJ,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEV,oBACEhB,KAAA,CAAAkB,aAAA,CAAAlB,KAAA,CAAAmB,QAAA,qBACAnB,KAAA,CAAAkB,aAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE1B1B,KAAA,CAAAkB,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAElB,cAAe;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAExC,CACH,CAAC;AAEP"},"metadata":{},"sourceType":"module"}